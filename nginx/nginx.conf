# Main nginx configuration for gRPC streaming
user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# # Load dynamic modules for gRPC support
# load_module modules/ngx_http_grpc_module.so;

events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
}

http {
    # Basic HTTP settings
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Logging format for gRPC
    log_format grpc_json escape=json
        '{'
        '"timestamp":"$time_iso8601",'
        '"client":"$remote_addr",'
        '"uri":"$uri",'
        '"http_status":$status,'
        '"grpc_status":"$grpc_status",'
        '"upstream_addr":"$upstream_addr",'
        '"upstream_response_time":"$upstream_response_time",'
        '"request_time":"$request_time",'
        '"request_length":"$request_length",'
        '"bytes_sent":"$bytes_sent"'
        '}';
    
    access_log /var/log/nginx/grpc_access.log grpc_json;
    
    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    
    # gRPC specific settings
    grpc_read_timeout 300s;
    grpc_send_timeout 300s;
    grpc_connect_timeout 60s;
    
    # Buffer settings for streaming
    client_body_buffer_size 1m;
    client_max_body_size 100m;
    proxy_buffering off;
    # grpc_buffering off;
    
    # Upstream configuration for backend
    upstream grpc_backend {
        # Backend server
        server 127.0.0.1:3000 max_fails=3 fail_timeout=30s;
        
        # Connection pooling
        keepalive 32;
        keepalive_requests 1000;
        keepalive_timeout 60s;
    }
    
    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=grpc_limit:10m rate=100r/s;
    limit_conn_zone $binary_remote_addr zone=grpc_conn:10m;
    
    server {
        listen 80 http2;
        listen [::]:80 http2;
        server_name your_domain.com;
        
        # Security headers
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        
        # Rate limiting
        limit_req zone=grpc_limit burst=200 nodelay;
        limit_conn grpc_conn 50;
        
        # Main gRPC location
        location /events {
            # gRPC pass to backend
            grpc_pass grpc://grpc_backend;
            
            # Headers for gRPC
            grpc_set_header Host $host;
            grpc_set_header X-Real-IP $remote_addr;
            grpc_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            grpc_set_header X-Forwarded-Proto $scheme;
            
            # Error handling
            error_page 502 = /grpc_502_error;
            error_page 503 = /grpc_503_error;
            error_page 504 = /grpc_504_error;
        }
        
        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Error pages for gRPC
        location = /grpc_502_error {
            internal;
            add_header grpc-status 14;
            add_header grpc-message "Unavailable";
            return 204;
        }
        
        location = /grpc_503_error {
            internal;
            add_header grpc-status 14;
            add_header grpc-message "Service Unavailable";
            return 204;
        }
        
        location = /grpc_504_error {
            internal;
            add_header grpc-status 4;
            add_header grpc-message "Deadline Exceeded";
            return 204;
        }
    }
    
    # HTTPS server (recommended for production)
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name your_domain.com;
        
        # SSL configuration (update paths to your certificates)
        ssl_certificate /path/to/your/certificate.crt;
        ssl_certificate_key /path/to/your/private.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        
        # Security headers
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        
        # Rate limiting
        limit_req zone=grpc_limit burst=200 nodelay;
        limit_conn grpc_conn 50;
        
        # Main gRPC location
        location /events {
            grpc_pass grpc://grpc_backend;
            
            grpc_set_header Host $host;
            grpc_set_header X-Real-IP $remote_addr;
            grpc_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            grpc_set_header X-Forwarded-Proto $scheme;
            
            error_page 502 = /grpc_502_error;
            error_page 503 = /grpc_503_error;
            error_page 504 = /grpc_504_error;
        }
        
        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Error pages for gRPC
        location = /grpc_502_error {
            internal;
            add_header grpc-status 14;
            add_header grpc-message "Unavailable";
            return 204;
        }
        
        location = /grpc_503_error {
            internal;
            add_header grpc-status 14;
            add_header grpc-message "Service Unavailable";
            return 204;
        }
        
        location = /grpc_504_error {
            internal;
            add_header grpc-status 4;
            add_header grpc-message "Deadline Exceeded";
            return 204;
        }
    }
}