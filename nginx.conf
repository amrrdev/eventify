events {
    worker_connections 1024;
}

http {
    # Disable buffering for streaming
    proxy_buffering off;
    
    # WebSocket upgrade configuration
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }
    
    # Real IP configuration for Cloudflare (so you get actual visitor IPs)
    set_real_ip_from 173.245.48.0/20;
    set_real_ip_from 103.21.244.0/22;
    set_real_ip_from 103.22.200.0/22;
    set_real_ip_from 103.31.4.0/22;
    set_real_ip_from 141.101.64.0/18;
    set_real_ip_from 108.162.192.0/18;
    set_real_ip_from 190.93.240.0/20;
    set_real_ip_from 188.114.96.0/20;
    set_real_ip_from 197.234.240.0/22;
    set_real_ip_from 198.41.128.0/17;
    set_real_ip_from 162.158.0.0/15;
    set_real_ip_from 104.16.0.0/13;
    set_real_ip_from 104.24.0.0/14;
    set_real_ip_from 172.64.0.0/13;
    set_real_ip_from 131.0.72.0/22;
    real_ip_header CF-Connecting-IP;
    
    upstream nestjs_http {
        server 127.0.0.1:3000;  # Railway: Both services in same container
    }

    upstream nestjs_grpc {
        server 127.0.0.1:4000;  # Railway: Both services in same container
    }

    server {
        # ðŸ”¥ CRITICAL FIX: Listen on ALL interfaces, not just localhost
        listen 0.0.0.0:80;
        listen [::]:80;  # IPv6 support
        http2 on;
        server_name _;
        
        # ðŸ”¥ OPTIONAL: Force HTTPS redirect (if you want server-side redirect)
        # if ($http_x_forwarded_proto != "https") {
        #     return 301 https://$host$request_uri;
        # }
        
        # Cloudflare-specific headers
        proxy_set_header CF-Connecting-IP $http_cf_connecting_ip;
        proxy_set_header CF-Ray $http_cf_ray;
        proxy_set_header CF-Visitor $http_cf_visitor;
        
        # Increase message size limits for large gRPC messages
        client_max_body_size 2G;
        client_body_buffer_size 128M;
        
        # gRPC timeouts
        grpc_read_timeout 300s;
        grpc_send_timeout 300s;   
        
        location / {
            # Handle gRPC requests based on content type
            if ($content_type ~* "application/grpc") {
                grpc_pass grpc://nestjs_grpc;
            }
            
            # Default HTTP requests (including WebSocket upgrades)
            proxy_pass http://nestjs_http;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # ðŸ”¥ CLOUDFLARE FIX: Add Cloudflare headers
            proxy_set_header CF-Connecting-IP $http_cf_connecting_ip;
            proxy_set_header X-Forwarded-Proto $scheme;  # Use actual scheme from Cloudflare
            
            proxy_cache_bypass $http_upgrade;
            proxy_read_timeout 300s;
            proxy_send_timeout 300s;
        }
        
        # Explicit WebSocket route for socket.io
        location /socket.io/ {
            proxy_pass http://nestjs_http;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;  # ðŸ”¥ Force HTTPS for Cloudflare
            
            # ðŸ”¥ CLOUDFLARE FIX: Add Cloudflare headers
            proxy_set_header CF-Connecting-IP $http_cf_connecting_ip;
            
            proxy_cache_bypass $http_upgrade;
            proxy_read_timeout 86400;
            proxy_send_timeout 86400;
        }
        
        location /grpc/ {
            grpc_pass grpc://nestjs_grpc;
            grpc_set_header Host $host;
            grpc_set_header X-Real-IP $remote_addr;
            grpc_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            grpc_set_header X-Forwarded-Proto https;  # ðŸ”¥ Force HTTPS for Cloudflare
            
            # ðŸ”¥ CLOUDFLARE FIX: Add Cloudflare headers  
            grpc_set_header CF-Connecting-IP $http_cf_connecting_ip;
        }
        
        # Health check
        location /health {
            proxy_pass http://nestjs_http/api/v1/health/simple;  # Simple health check
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-Proto https;  # ðŸ”¥ Force HTTPS for Cloudflare
        }
        
        # ðŸ”¥ ADDITIONAL: Cloudflare health check endpoint
        location /.well-known/cf-health-check {
            proxy_pass http://nestjs_http/api/v1/health;
            proxy_set_header Host $host;
        }
    }
}